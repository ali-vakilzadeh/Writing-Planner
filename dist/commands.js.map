{"version":3,"file":"commands.js","mappings":"YACA,IAAIA,EAAsB,CAAC,ECc3B,SAASC,EAAOC,GAAO,IAAAC,EACrBD,EAAME,YACN,IAAMC,EAAU,CACdC,KAAMC,OAAOC,aAAaC,4BAA4BC,qBACtDL,QAAS,oBACTM,KAAM,aACNC,YAAY,GAIa,QAA3BT,EAAAI,OAAOM,QAAQC,QAAQC,YAAI,IAAAZ,GAA3BA,EAA6Ba,qBAAqBC,aAChD,gCACAZ,GAIFH,EAAME,WACR,CChCAJ,EAAoBkB,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GDOxBhB,OAAOiB,SAAQ,WACb,IA2BFjB,OAAOkB,QAAQC,UAAU,SAAUzB,IAGV,oBAAT0B,KACVA,KACkB,oBAAXJ,OACLA,YACkB,IAAXK,EAAAA,EACLA,EAAAA,OACAC,GAMR5B,OAASA,C","sources":["webpack://office-addin-taskpane-react-js/webpack/bootstrap","webpack://office-addin-taskpane-react-js/./src/commands/commands.js","webpack://office-addin-taskpane-react-js/webpack/runtime/global"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\n/* global Office */\r\n\r\nOffice.onReady(() => {\r\n  // If needed, Office.js is ready to be called.\r\n});\r\n\r\n/**\r\n * Shows a notification when the add-in command is executed.\r\n * @param event {Office.AddinCommands.Event}\r\n */\r\nfunction action(event) {\r\n  event.completed();\r\n  const message = {\r\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\r\n    message: \"Performed action.\",\r\n    icon: \"Icon.80x80\",\r\n    persistent: true,\r\n  };\r\n\r\n  // Show a notification message.\r\n  Office.context.mailbox.item?.notificationMessages.replaceAsync(\r\n    \"ActionPerformanceNotification\",\r\n    message\r\n  );\r\n\r\n  // Be sure to indicate when the add-in command function is complete.\r\n  event.completed();\r\n}\r\n\r\n// Register the function with Office.\r\nOffice.actions.associate(\"action\", action);\r\n\r\nfunction getGlobal() {\r\n  return typeof self !== \"undefined\"\r\n    ? self\r\n    : typeof window !== \"undefined\"\r\n      ? window\r\n      : typeof global !== \"undefined\"\r\n        ? global\r\n        : undefined\r\n}\r\n\r\nconst g = getGlobal()\r\n\r\n// The add-in command functions need to be available in global scope\r\ng.action = action","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();"],"names":["__webpack_require__","action","event","_Office$context$mailb","completed","message","type","Office","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","context","mailbox","item","notificationMessages","replaceAsync","g","globalThis","this","Function","e","window","onReady","actions","associate","self","global","undefined"],"sourceRoot":""}